The ``2-matrix_divided`` module
=====================================
Usig matrix_divided
------------------------------------
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([[2, 4, 8]], 4)
[[0.5, 1.0, 2.0]]

>>> matrix_divided([[8, 6, 4], [3, 7, 9]], 2)
[[4.0, 3.0, 2.0], [1.5, 3.5, 4.5]]

>>> matrix_divided({}, 7)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([2, 4, 8], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, "hello", 5]], 6)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3, 4], [1 ,3]], 5)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[12, 6], [9, 3]], "0")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[12, 6], [9, 3]], [3])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[12, 6], [9, 3]], (3))
[[4.0, 2.0], [3.0, 1.0]]
>>> matrix_divided([[12, 6], [9, 3]], (3,2))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[12, 6], [9, 3]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[]], 6)
[[]]

>>> matrix_divided([], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix_divided([[2, 4, 8]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
